/****************************************************************************
**
** Copyright (C) 2022 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page qtnfc-pcsc.html
\title PC/SC in Qt NFC
\ingroup connectivity-nfc
\inmodule QtNfc
\since 6.4
\brief Notes on PC/SC support in Qt Nfc.

PC/SC support is provided using native APIs on macOS and Windows, and using
\l{https://pcsclite.apdu.fr/}{PCSCLite} library on other platforms. The API
can be used for accessing both wired and wireless smartcards and storage cards.

\section1 Limitations

\list
  \li The current API does not provide means to distinguish between separate
    readers/slots.
  \li NDEF access is only provided for NFC Type 4 tags.
  \li Other applications starting transactions on cards may block Qt applications
    from using Qt Nfc API.
  \li QNearFieldTarget::sendCommand() used with a PC/SC target starts
    a transaction that remains active until QNearFieldTarget::disconnect()
    is called. This transaction prevents other applications from accessing
    this target.
\endlist
*/
